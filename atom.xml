<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>nicetomeetu</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-28T14:22:46.204Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>hk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Tenka1 Programmer Contest (C,D,E)</title>
    <link href="http://yoursite.com/2018/10/28/Tenka1-Programmer-Contest/"/>
    <id>http://yoursite.com/2018/10/28/Tenka1-Programmer-Contest/</id>
    <published>2018-10-28T12:43:37.000Z</published>
    <updated>2018-10-28T14:22:46.204Z</updated>
    
    <content type="html"><![CDATA[<p>第一把 <em>AtCoder</em>，可以说是真的菜了，<em>E</em> 题调到死都没调出来，<em>F</em> 也不会做…</p><p><a href="https://beta.atcoder.jp/contests/tenka1-2018" target="_blank" rel="noopener">地址</a></p><a id="more"></a><h2 id="C-Align"><a href="#C-Align" class="headerlink" title="C - Align"></a>C - Align</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给定 <em>n</em> 个数字，要求排成一排后任意两个数字之差的绝对值之和最大，求最大值</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>一定是将数列排序后分成两半，前一半和后一半交替排列。绝对值符号可以去掉，然后每个数字计算次数只跟其位置有关，最后分类讨论一下就好了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    sort(a+<span class="number">1</span>, a+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">if</span> (n%<span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n/<span class="number">2</span>; i++) ans -= <span class="number">2</span>*a[i];</span><br><span class="line">        ans -= a[n/<span class="number">2</span>];</span><br><span class="line">        ans += a[n/<span class="number">2</span>+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n/<span class="number">2</span>+<span class="number">2</span>; i &lt;= n; i++) ans += <span class="number">2</span>*a[i];</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        ans -= a[n/<span class="number">2</span>];</span><br><span class="line">        ans -= a[n/<span class="number">2</span>+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n/<span class="number">2</span>; i++) ans -= <span class="number">2</span>*a[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n/<span class="number">2</span>+<span class="number">2</span>; i &lt;= n; i++) ans += <span class="number">2</span>*a[i];</span><br><span class="line">        ll ans2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n/<span class="number">2</span>; i++) ans2 -= <span class="number">2</span>*a[i];</span><br><span class="line">        ans2 += a[n/<span class="number">2</span>+<span class="number">2</span>];</span><br><span class="line">        ans2 += a[n/<span class="number">2</span>+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n/<span class="number">2</span>+<span class="number">3</span>; i &lt;= n; i++) ans2 += <span class="number">2</span>*a[i];</span><br><span class="line">        ans = max(ans, ans2);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Crossing"><a href="#D-Crossing" class="headerlink" title="D - Crossing"></a>D - Crossing</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>给定 <em>n</em>，问是否存在这样的集合组：</p><ul><li><em>1</em>-<em>n</em> 每个数字都恰好被包含在两个集合中</li><li>任意两个集合仅有一个相同数字</li></ul><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p><em>n</em> 条边的完全图</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i*(i<span class="number">-1</span>)/<span class="number">2</span> &lt;= n; i++) </span><br><span class="line">        <span class="keyword">if</span> (i*(i<span class="number">-1</span>)/<span class="number">2</span> == n) <span class="keyword">return</span> i;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mp[<span class="number">505</span>][<span class="number">505</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span> k = check(n);</span><br><span class="line">    <span class="keyword">if</span> (!k) <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt;= k; j++)</span><br><span class="line">                mp[i][j] = mp[j][i] = n--;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, k);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, k<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j == i) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" %d"</span>, mp[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-Equilateral"><a href="#E-Equilateral" class="headerlink" title="E - Equilateral"></a>E - Equilateral</h2><h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>给出一张仅含 ‘#’ 和 ‘*’ 的矩阵，问位置三元组的数目，其满足每个位置上的字符都是 ‘#’ 且任意两点的麦哈顿距离相同</p><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p>跟题解大致相同的思路。</p><img src="/2018/10/28/Tenka1-Programmer-Contest/E-Equilateral.png"><p><em>a</em> 和 <em>b</em> 长度相同，第三个点坐落在蓝线上。故先枚举中间的红点，再枚举另外俩红点的位置，统计蓝线上的点的数目即可。预处理斜线前缀和，复杂度<code>O(n^3)</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">305</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">char</span> mp[<span class="number">3</span>*N][<span class="number">3</span>*N];</span><br><span class="line"><span class="keyword">int</span> suml[<span class="number">3</span>*N][<span class="number">3</span>*N], sumr[<span class="number">3</span>*N][<span class="number">3</span>*N];</span><br><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (mp[x-i][y] == <span class="string">'#'</span>) num++;</span><br><span class="line">        <span class="keyword">if</span> (mp[x+i][y] == <span class="string">'#'</span>) num++;</span><br><span class="line">        <span class="keyword">if</span> (mp[x][y-i] == <span class="string">'#'</span>) num++;</span><br><span class="line">        <span class="keyword">if</span> (mp[x][y+i] == <span class="string">'#'</span>) num++;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">3</span>) ans++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (num == <span class="number">4</span>) ans += <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; x-i &gt;= N+<span class="number">1</span> &amp;&amp; y-i &gt;= N+<span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mp[x-i][y] == <span class="string">'.'</span> || mp[x][y-i] == <span class="string">'.'</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> sx = x+<span class="number">1</span>, sy = y+i<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> ex = x+i<span class="number">-1</span>, ey = y+<span class="number">1</span>;</span><br><span class="line">        ans += suml[ex][ey] - suml[sx<span class="number">-1</span>][sy+<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; x-i &gt;= N+<span class="number">1</span> &amp;&amp; y+i &lt;= N+m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mp[x-i][y] == <span class="string">'.'</span> || mp[x][y+i] == <span class="string">'.'</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> sx = x+<span class="number">1</span>, sy = y-i+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> ex = x+i<span class="number">-1</span>, ey = y<span class="number">-1</span>;</span><br><span class="line">        ans += sumr[ex][ey] - sumr[sx<span class="number">-1</span>][sy<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; x+i &lt;= N+n &amp;&amp; y+i &lt;= N+m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mp[x+i][y] == <span class="string">'.'</span> || mp[x][y+i] == <span class="string">'.'</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> sx = x-i+<span class="number">1</span>, sy = y<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> ex = x<span class="number">-1</span>, ey = y-i+<span class="number">1</span>;</span><br><span class="line">        ans += suml[ex][ey] - suml[sx<span class="number">-1</span>][sy+<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; x+i &lt;= N+n &amp;&amp; y-i &gt;= N+<span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mp[x+i][y] == <span class="string">'.'</span> || mp[x][y-i] == <span class="string">'.'</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> sx = x-i+<span class="number">1</span>, sy = y+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> ex = x<span class="number">-1</span>, ey = y+i<span class="number">-1</span>;</span><br><span class="line">        ans += sumr[ex][ey] - sumr[sx<span class="number">-1</span>][sy<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = N+<span class="number">1</span>; i &lt;= N+n; i++) <span class="built_in">scanf</span>(<span class="string">"%s"</span>, mp[i]+<span class="number">1</span>+N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>*N+n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span>*N+m; j++)</span><br><span class="line">            suml[i][j] = sumr[i][j] = (mp[i][j] == <span class="string">'#'</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>*N+n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span>*N+m; j++) &#123;</span><br><span class="line">            sumr[i][j] += sumr[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line">            suml[i][j] += suml[i<span class="number">-1</span>][j+<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = N+<span class="number">1</span>; i &lt;= N+n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = N+<span class="number">1</span>; j &lt;= N+m; j++)</span><br><span class="line">            ans += solve(i, j);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一把 &lt;em&gt;AtCoder&lt;/em&gt;，可以说是真的菜了，&lt;em&gt;E&lt;/em&gt; 题调到死都没调出来，&lt;em&gt;F&lt;/em&gt; 也不会做…&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://beta.atcoder.jp/contests/tenka1-2018&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
    
      <category term="AtCoder" scheme="http://yoursite.com/tags/AtCoder/"/>
    
  </entry>
  
</feed>
